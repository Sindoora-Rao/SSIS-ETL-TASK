<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/24/2024 12:19:51 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SINDHUVICTUS"
  DTS:CreatorName="SINDHUVICTUS\s97ra"
  DTS:DTSID="{FCDC6AF8-3041-46EC-94A7-78EB05E73019}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="4105"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="112"
  DTS:VersionGUID="{75DEB63C-49AE-465B-AE3F-D9BFE18AAEE5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F31DB4DC-748E-4514-8DE2-5B399528E029}"
      DTS:ObjectName="CSV Source">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="9225"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\s97ra\OneDrive\Desktop\Concordia\winter24\IP\Project\SSIS-ETL-TASK\Data\source.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID"
              DTS:DTSID="{30E2A1C4-8D52-423A-8146-4CCAA1EC058B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{C28A1639-2AA6-436E-8771-EB8B175A8D84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{6CBF2015-134F-491D-862C-2DA0E9EAF885}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{6BC214CF-5F1F-4BC6-89FC-07E2190AE613}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{A79DA9C1-F117-4621-AD78-A366851D0ACE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{FEC4DFE7-B809-4167-9208-C0D61B90A0D3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{6BE70434-523A-43CC-9BC7-A722375A4798}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InvalidRows]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{6909F5E8-5372-4E6A-B2BE-B0C137015B13}"
      DTS:ObjectName="InvalidRows">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\s97ra\OneDrive\Desktop\Concordia\winter24\IP\Project\SSIS-ETL-TASK\InvalidRecords\InValidRows.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6C23A16C-974C-474C-AC46-8E79A779797E}"
      DTS:ObjectName="LocalHost">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package-{6C23A16C-974C-474C-AC46-8E79A779797E}LocalHost;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EBC0FD1A-B0AB-4EFD-96AE-A244E5512FE3}"
      DTS:ObjectName="LocalHost.KoreAssignment_Sindoora_Rao">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=KoreAssignment_Sindoora_Rao;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package-{EBC0FD1A-B0AB-4EFD-96AE-A244E5512FE3}LocalHost.KoreAssignment_Sindoora_Rao;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SSIS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{356C32BC-B812-4923-8C40-CC2FD39F2E2D}"
      DTS:ObjectName="LocalHost.SSIS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SSIS;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{356C32BC-B812-4923-8C40-CC2FD39F2E2D}LocalHost.SSIS;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Old InValid rows"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{16266B27-F94F-44B0-831E-FCEE73A3F427}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Old InValid rows"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; Â© 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6909F5E8-5372-4E6A-B2BE-B0C137015B13}"
          SQLTask:SqlStatementSource="DROP TABLE  `InValidAge`&#xA;go&#xA;CREATE TABLE `InValidAge` (&#xA;    `UserID` VARCHAR(50),&#xA;    `FullName` VARCHAR(50),&#xA;    `Age` VARCHAR(50),&#xA;    `Email` VARCHAR(50),&#xA;    `RegistrationDate` VARCHAR(50),&#xA;    `LastLoginDate` VARCHAR(50),&#xA;    `PurchaseTotal` VARCHAR(50)&#xA;)&#xA;go&#xA;DROP TABLE  `InValidUserID`&#xA;go&#xA;CREATE TABLE `InValidUserID` (&#xA;    `UserID` VARCHAR(50),&#xA;    `FullName` VARCHAR(50),&#xA;    `Age` VARCHAR(50),&#xA;    `Email` VARCHAR(50),&#xA;    `RegistrationDate` VARCHAR(50),&#xA;    `LastLoginDate` VARCHAR(50),&#xA;    `PurchaseTotal` VARCHAR(50)&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ExtractData From CSV to Staging"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{892DD12C-6674-4834-A70D-8316263D6EE8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="ExtractData From CSV to Staging"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\ExtractData From CSV to Staging\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[IsUserIDNumeric]"
                      cachedDataType="i4"
                      cachedName="IsUserIDNumeric"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[IsAgeNumeric]"
                      cachedDataType="i4"
                      cachedName="IsAgeNumeric"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Valid]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="Valid"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]} == 1 &amp;&amp; (DT_I4)#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]} &gt;= 0 &amp;&amp; #{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]} == 1</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsAgeNumeric == 1 &amp;&amp; (DT_I4)Age &gt;= 0 &amp;&amp; IsUserIDNumeric == 1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[InValidUserID]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="InValidUserID"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEN]([TRIM](#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]})) == 0 || #{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]} == 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEN(TRIM(UserID)) == 0 || IsUserIDNumeric == 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[InValidAge]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="InValidAge"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(IsAgeNumeric)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      precision="18"
                      scale="2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      name="Copy of UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      name="Copy of Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      name="Copy of Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate]"
                      name="Copy of LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      name="Copy of PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      name="Copy of CleanRegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Data Conversion 2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      name="Copy of UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      name="Copy of Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      name="Copy of Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate]"
                      name="Copy of RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[RegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate]"
                      name="Copy of LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      name="Copy of PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      name="Copy of CleanRegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      truncationRowDisposition="IgnoreFailure"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEN]([TRIM](#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]})) == 0 ? "0.0" : #{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEN(TRIM(PurchaseTotal)) == 0 ? "0.0" : PurchaseTotal</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]"
                      name="IsUserIDNumeric"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]} == (DT_I4)#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]} ? 1 : 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)UserID == (DT_I4)UserID ? 1 : 0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]"
                      name="IsAgeNumeric"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]} == (DT_I4)#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]} ? 1 : 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)Age == (DT_I4)Age ? 1 : 0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="9225"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\ExtractData From CSV to Staging\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV Source]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV Source]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\InValidAge"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="InValidAge"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">InValidAge</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ExtractData From CSV to Staging\InValidAge.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[InvalidRows]"
                  connectionManagerRefId="Package.ConnectionManagers[InvalidRows]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of UserID"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Age"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of Email]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Email"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Email]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of RegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of RegistrationDate"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of LastLoginDate"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of PurchaseTotal"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\InValidUserID"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="InValidUserID"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">InValidUserID</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ExtractData From CSV to Staging\InValidUserID.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[InvalidRows]"
                  connectionManagerRefId="Package.ConnectionManagers[InvalidRows]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of UserID"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of Email]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Email"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Email]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of CleanRegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanRegistrationDate"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of LastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of LastLoginDate"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of LastLoginDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of PurchaseTotal"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Age"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PurchaseTotal]"
                      cachedDataType="numeric"
                      cachedName="PurchaseTotal"
                      cachedPrecision="18"
                      cachedScale="2"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[RegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Remove duplicate UserID"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[IsUserIDNumeric]"
                      cachedDataType="i4"
                      cachedName="IsUserIDNumeric"
                      lineageId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[IsAgeNumeric]"
                      cachedDataType="i4"
                      cachedName="IsAgeNumeric"
                      lineageId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]"
                      name="UserID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]"
                      name="FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]"
                      name="Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]"
                      name="Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[RegistrationDate]"
                      name="RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[LastLoginDate]"
                      name="LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]"
                      name="IsUserIDNumeric">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]"
                      name="CleanRegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]"
                      dataType="i4"
                      lineageId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]"
                      name="IsAgeNumeric">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\ExtractData From CSV to Staging\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        if (Row.RegistrationDate_IsNull || string.IsNullOrWhiteSpace(Row.RegistrationDate))
        {
            Row.CleanRegistrationDate_IsNull = true;
        }
        else
        {
            string dateStr = Row.RegistrationDate.Trim();
            DateTime parsedDate;

            if (dateStr.Contains("/"))
            {
                // Handle dates with slashes (dd/MM/yyyy)
                string[] dateParts = dateStr.Split('/');
                if (dateParts.Length == 3)
                {
                    string formattedDate = $"{dateParts[2]}-{dateParts[1]}-{dateParts[0]}";
                    if (DateTime.TryParse(formattedDate, out parsedDate))
                    {
                        Row.CleanRegistrationDate = parsedDate;
                    }
                    else
                    {
                        Row.CleanRegistrationDate_IsNull = true;
                    }
                }
                else
                {
                    Row.CleanRegistrationDate_IsNull = true;
                }
            }
            else
            {
                // Handle dates without slashes
                if (DateTime.TryParse(dateStr, out parsedDate))
                {
                    Row.CleanRegistrationDate = parsedDate;
                }
                else
                {
                    Row.CleanRegistrationDate_IsNull = true;
                }
            }
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RegistrationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool RegistrationDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime CleanRegistrationDate
    {
        set
        {
            this[1] = value;
        }
    }
    public bool CleanRegistrationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Settings.get_Default():SC_352229efcdd54405872c1725bdd177aa.Properties.Sett" +
    "ings")]

namespace SC_352229efcdd54405872c1725bdd177aa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_352229efcdd54405872c1725bdd177aa.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{325a1877-9373-46dd-8836-0d013c228c02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_352229efcdd54405872c1725bdd177aa</RootNamespace>
    <AssemblyName>SC_352229efcdd54405872c1725bdd177aa</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_352229efcdd54405872c1725bdd177aa" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_352229efcdd54405872c1725bdd177aa</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_352229efcdd54405872c1725bdd177aa</msb:DisplayName>
    <msb:ProjectId>{47D56C2C-5DA6-4BE6-AD2E-5057BA37BF76}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_352229efcdd54405872c1725bdd177aa.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_352229efcdd54405872c1725bdd177aa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_352229efcdd54405872c1725bdd177aa")]
[assembly: AssemblyCopyright("Copyright @ HP 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_352229efcdd54405872c1725bdd177aa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_352229efcdd54405872c1725bdd177aa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_352229efcdd54405872c1725bdd177aa.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALZWoWYAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAMjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAyAABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
MwAAAAAAAEgAAAACAAUAYCIAAMgPAAABAAAAAAAAACgyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUAtgAAAAEAABEDbwcAAAYt
DQNvBgAABigSAAAKLAgDF28JAAAGKgNvBgAABm8TAAAKCgZyAQAAcG8UAAAKLGYGF40cAAABJRYf
L51vFQAACgwIjmkZM0YbjRsAAAElFggYmqIlF3IFAABwoiUYCBeaoiUZcgUAAHCiJRoIFpqiKBYA
AAoSASgXAAAKLAgDB28IAAAGKgMXbwkAAAYqAxdvCQAABioGEgEoFwAACiwIAwdvCAAABioDF28J
AAAGKh4CKAwAAAYqKgIDBAUoGAAACipSAnsZAAAKAnsaAAAKFpRvGwAACioiAhYoHAAACio6AhcD
jA4AAAEoHQAACipaAywIAhcoHgAACipyCQAAcHMfAAAKeh4CKCAAAAoqHgIoIQAACip+AigiAAAK
AgJzEAAABn0BAAAEAgJzEQAABn0CAAAEKpIEcqYAAHAabyMAAAosFQIFAgMoJAAACg4EcwUAAAZv
DgAABipKKwcCA28PAAAGA28KAAAGLfEqBio6AiglAAAKAgN9AwAABCo6AiglAAAKAgN9BAAABCoe
AiglAAAKKq5+BQAABC0ecrYAAHDQBwAAAigmAAAKbycAAApzKAAACoAFAAAEfgUAAAQqGn4GAAAE
Kh4CgAYAAAQqGn4HAAAEKh4CKCkAAAoqLnMXAAAGgAcAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAJwFAAAjfgAACAYAAKgGAAAjU3RyaW5ncwAAAACwDAAAKAEAACNVUwDY
DQAAEAAAACNHVUlEAAAA6A0AAOABAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEA
AAAhAAAACAAAAAcAAAAYAAAADwAAACkAAAAQAAAAAQAAAAMAAAAHAAAACAAAAAEAAAAEAAAAAQAA
AAAAQQMBAAAAAAAGADgCxwQGAMwCxwQGAIQBtAQPADsFAAAGALEBBAQGABsCBAQGAPwBBAQGALMC
BAQGAFgCBAQGAHECBAQGAMgBBAQGAOMBBwMKAIwCmQAGAJAAtwMKAIYEmQAOAHcEmQAKAE0EmQAK
ABcGmQAGANQFtwMGAGcBtAQGAJcE5wQGAEEE7wMSADcBKwMSAJgBKwMSAOcA2gMGAEwBxwQGACQD
twMGAGUEtwMGABYEtwMGADAEtwMGALoAtwMGAGIAtwMGAJwGBAQAAAAAAQAAAAAAAQABAAEAEADP
AwAAEAABAAEAAQAQAGoEAAA9AAEABQABABAA+QUAAEkAAQAMAAEAEADBBQAATQADABAAAQAQAHkF
AABNAAQAEQAAABAA7gRKBU0ABQASAAABEACoBUoFZQAHABYABgDBBaEABgB5BaUAAQAHBqkAAQAH
BqkAEQDDA60AEQDXALEAEQBSALUAUCAAAAAAxgDqAgYAAQBYIAAAAADGAPUCBgABAGAgAAAAAMYA
eQa5AAEAIiEAAAAAhhinBAYAAgAqIQAAAACGGKcERgACADUhAAAAAIYICAEoAAUASiEAAAAAhghp
A2gABQBTIQAAAACGCB0BvwAFAGIhAAAAAIYIhQPFAAYAeSEAAAAAhgCQBmgABwCBIQAAAACGANsF
aAAHAIkhAAAAAIYYpwQGAAcAqSEAAAAAxgBsBsoABwDOIQAAAADGAWUGuQALAOEhAAAAAMYBeQa5
AAwA4yEAAAAAhhinBNQADQDyIQAAAACGGKcE1AAOAAEiAAAAAIMYpwQGAA8ACSIAAAAAkwiTBNoA
DwA1IgAAAACTCL8A3wAPADwiAAAAAJMIywDkAA8ARCIAAAAAlgjtBeoAEABLIgAAAACGGKcEBgAQ
AFMiAAAAAJEYrQTvABAAAAABAJQGAAABAIwEAAACAIMFAAADAFsEAAABAAEDAAABAAEDAAABAAoA
AAACAIYAAAADAIwEAAAEAFsEAAABAIwEAAABAJQGAAABAB0GAAABAB0GAAABAAEDCQCnBAEAEQCn
BAYAGQCnBAoAKQCnBBAAMQCnBBAAOQCnBBAAQQCnBBAASQCnBBAAUQCnBBAAWQCnBBAAYQCnBBAA
aQCnBAYAoQCnBAYAwQCnBBUA0QCnBAYAkQDqAgYAkQD1AgYA2QA/ACMA2QC+AygA2QC4BSwA2QDn
BTEA2QDNBTgAcQD/AD4AeQCnBEYAeQCMBFAAeQCDBVQAgQAhA1gAeQCfA10AeQCuA2IAeQCmAwEA
6QCnBBAAeQCQBmgAeQDbBWgAkQCnBAYA2QCxBWwAkQCXBXMAmQCnBAYA+QB0AHkA+QCYBoEAqQCn
BIcAyQCnBAYALgALAA8BLgATABgBLgAbADcBLgAjAEABLgArAGkBLgAzAGkBLgA7AG8BLgBDAEAB
LgBLAHcBLgBTAGkBLgBbAJABQwBjANoBqQBzADcByQBzADcB4QB7ANoB4wBrANoBGwADAAEABwAF
AAgABwAAACYB8wAAAI4D9wAAACEB+wAAAIkD9wAAAJcEAAEAAN8ABQEAAPEFCgECAAYAAwACAAcA
BQABAAgABwABAAkACQACABMACwACABQADQABABUADQACABYADwAEgAAAAQAAAAAAAAAAAAAAAAAS
AAAABAAAAAAAAAAAAAAAjwA2AAAAAAAQAAAAAAAAAAAAAACYACcGAAAAABAAAAAAAAAAAAAAAJgA
RAYAAAAABAAAAAAAAAAAAAAAjwC3AwAAAAAAAAAAAQAAAPgEAAAAAAAAADxNb2R1bGU+AElucHV0
SUQAU0NfMzUyMjI5ZWZjZGQ1NDQwNTg3MmMxNzI1YmRkMTc3YWEAbXNjb3JsaWIASXNOdWxsT3JX
aGl0ZVNwYWNlAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
VHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UAVHJ5UGFyc2UAZ2V0X1JlZ2lzdHJhdGlvbkRhdGUAc2V0X0NsZWFuUmVnaXN0
cmF0aW9uRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAR2V0U3RyaW5nAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTQ18zNTIyMjllZmNkZDU0NDA1ODcyYzE3MjViZGQxNzdhYS5k
bGwAZ2V0X1JlZ2lzdHJhdGlvbkRhdGVfSXNOdWxsAHNldF9DbGVhblJlZ2lzdHJhdGlvbkRhdGVf
SXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAQ2hhcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU0NfMzUyMjI5ZWZjZGQ1NDQwNTg3MmMxNzI1YmRkMTc3YWEuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzM1MjIyOWVmY2RkNTQ0MDU4NzJjMTcyNWJk
ZDE3N2FhLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1u
SW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29udGFpbnMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVj
dABFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAAAMvAAADLQABgJtJAHMATgB1AGwA
bAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABG
AGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAA
YwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AMwA1
ADIAMgAyADkAZQBmAGMAZABkADUANAA0ADAANQA4ADcAMgBjADEANwAyADUAYgBkAGQAMQA3ADcA
YQBhAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAWTl5aUSl3Rpsp
4IMXljPcAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBwcDDhE5HQ4EAAECDgMgAA4EIAECDgYg
AR0OHQMFAAEOHQ4HAAICDhAROQkgAwESQR0IEkUDBhJBAwYdCAQgAQ4IBCABAggFIAIBCBwDIAAC
BiACAg4ReQUgAR0ICAcAARJ9EYCBBSAAEoCFByACAQ4SgIUIt3pcVhk04IkIiYRdzYCAzJEDBhIU
AwYSGAMGEkkDBhJVAwYSWQMGEiAFIAEBEgwFIAEBETkEIAEBAgkgBAEIDhJBEkUFIAEBEkkEAAAS
VQQAABJZBQABARJZBAAAEiADAAABAygADgMoAAIEKAAROQQIABJVBAgAElkECAASIAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMzUyMjI5ZWZj
ZGQ1NDQwNTg3MmMxNzI1YmRkMTc3YWEAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQ
IDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAAgzAAAAAAAAAAAAACIz
AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUMwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29y
ZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBDAF8AMwA1ADIAMgAyADkAZQBmAGMAZABkADUANAA0ADAANQA4ADcAMgBjADEANwAy
ADUAYgBkAGQAMQA3ADcAYQBhAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAzADUAMgAy
ADIAOQBlAGYAYwBkAGQANQA0ADQAMAA1ADgANwAyAGMAMQA3ADIANQBiAGQAZAAxADcANwBhAGEA
LgBkAGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBp
AGcAaAB0ACAAQAAgAEgAUAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0A
YQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwAzADUAMgAyADIAOQBlAGYAYwBkAGQANQA0ADQAMAA1ADgANwAyAGMAMQA3ADIANQBiAGQA
ZAAxADcANwBhAGEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AMwA1ADIAMgAyADkAZQBmAGMAZABkADUANAA0ADAANQA4ADcAMgBjADEANwAyADUAYgBkAGQA
MQA3ADcAYQBhAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAw
AC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAA
LgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAANDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_352229efcdd54405872c1725bdd177aa</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">C8</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\ExtractData From CSV to Staging\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\ExtractData From CSV to Staging\Script Component.Inputs[Input 0].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\ExtractData From CSV to Staging\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\ExtractData From CSV to Staging\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\ExtractData From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\ExtractData From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]"
                      name="CleanRegistrationDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Data Conversion Output]"
              endId="Package\ExtractData From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\ExtractData From CSV to Staging\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Data Conversion Output1]"
              endId="Package\ExtractData From CSV to Staging\InValidUserID.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\ExtractData From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Data Conversion Output2]"
              endId="Package\ExtractData From CSV to Staging\InValidAge.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\ExtractData From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Derived Column Output]"
              endId="Package\ExtractData From CSV to Staging\Script Component.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\ExtractData From CSV to Staging\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Flat File Source Output]"
              endId="Package\ExtractData From CSV to Staging\Derived Column.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\ExtractData From CSV to Staging\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[InValidAge]"
              endId="Package\ExtractData From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]"
              name="InValidAge"
              startId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[InValidAge]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[InValidUserID]"
              endId="Package\ExtractData From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]"
              name="InValidUserID"
              startId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[InValidUserID]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Output 0]"
              endId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input]"
              name="Output 0"
              startId="Package\ExtractData From CSV to Staging\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[Sort Output]"
              endId="Package\ExtractData From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
              name="Sort Output"
              startId="Package\ExtractData From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output]" />
            <path
              refId="Package\ExtractData From CSV to Staging.Paths[ValidAge]"
              endId="Package\ExtractData From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]"
              name="ValidAge"
              startId="Package\ExtractData From CSV to Staging\Conditional Split.Outputs[Valid]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0BECBDDD-2BAF-405D-BF95-D51474F0ADEE}"
      DTS:From="Package\Clear Old InValid rows"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ExtractData From CSV to Staging" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="233.6,41.6"
          Id="Package\ExtractData From CSV to Staging"
          TopLeft="144.999992077549,211.466665196154" />
        <NodeLayout
          Size="181.6,41.6"
          Id="Package\Clear Old InValid rows"
          TopLeft="163.333324409194,94.4666660097572" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="257.966658243371,136.066666009757">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.3999991863968"
              Start="0,0"
              End="0,67.8999991863968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.8999991863968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\ExtractData From CSV to Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,63.2"
          Id="Package\ExtractData From CSV to Staging\OLE DB Destination"
          TopLeft="61.333330282735,639.433331929114" />
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\ExtractData From CSV to Staging\Remove duplicate UserID"
          TopLeft="215.833321540721,301.066665919356" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\ExtractData From CSV to Staging\Derived Column"
          TopLeft="234.166653872365,89.2666660459174" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\ExtractData From CSV to Staging\Data Conversion 2"
          TopLeft="468.333307744729,514.333331459032" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\ExtractData From CSV to Staging\Data Conversion 1"
          TopLeft="255.833319355217,515.933331314392" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\ExtractData From CSV to Staging\Data Conversion"
          TopLeft="70.10000928839,515.299998752475" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\ExtractData From CSV to Staging\Conditional Split"
          TopLeft="242.499986750385,402.999998788635" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\ExtractData From CSV to Staging\Script Component"
          TopLeft="235.833320447969,197.666665431195" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\ExtractData From CSV to Staging\Flat File Source"
          TopLeft="242.5,5.49999999999995" />
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Flat File Source Output]"
          TopLeft="314.333326936182,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.1666660459175"
              Start="0,0"
              End="0,34.6666660459175">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.6666660459175" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Derived Column Output]"
          TopLeft="313.599987160167,130.866666045917">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.7999993852775"
              Start="0,0"
              End="0,59.2999993852775">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.2999993852775" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,21.6499996926388,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Data Conversion Output]"
          TopLeft="147.516669785562,556.899998752475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,82.5333331766391"
              Start="0,0"
              End="0,75.0333331766391">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.0333331766391" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,29.5166665883196,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[ValidAge]"
          TopLeft="295.033320083718,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-146.933310795328,70.6999999638401"
              Start="0,0"
              End="-146.933310795328,63.1999999638401">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7173195729412" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.7173195729412"
                    Point2="0,28.7173195729412"
                    Point3="-4,28.7173195729412" />
                  <mssgle:LineSegment
                    End="-142.933310795328,28.7173195729412" />
                  <mssgle:CubicBezierSegment
                    Point1="-142.933310795328,28.7173195729412"
                    Point2="-146.933310795328,28.7173195729412"
                    Point3="-146.933310795328,32.7173195729412" />
                  <mssgle:LineSegment
                    End="-146.933310795328,63.1999999638401" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-84.817827272664,33.7173195729412,22.70234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Sort Output]"
          TopLeft="316.766654145553,342.666665919356">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.3333328692786"
              Start="0,0"
              End="0,52.8333328692786">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.8333328692786" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Output 0]"
          TopLeft="315.433320994345,239.266665431195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.8000004881611"
              Start="0,0"
              End="0,54.3000004881611">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.3000004881611" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[InValidUserID]"
          TopLeft="340.699986386134,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.3333325257568"
              Start="0,0"
              End="0,63.8333325257568">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.8333325257568" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.1328125,27.0421545441284,62.265625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[InValidAge]"
          TopLeft="355.699986750385,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="194.633320994344,69.7333326703971"
              Start="0,0"
              End="194.633320994344,62.2333326703971">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.0377699648809" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.0377699648809"
                    Point2="0,24.0377699648809"
                    Point3="4,24.0377699648809" />
                  <mssgle:LineSegment
                    End="190.633320994344,24.0377699648809" />
                  <mssgle:CubicBezierSegment
                    Point1="190.633320994344,24.0377699648809"
                    Point2="194.633320994344,24.0377699648809"
                    Point3="194.633320994344,28.0377699648809" />
                  <mssgle:LineSegment
                    End="194.633320994344,62.2333326703971" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="72.958711278422,29.0377699648809,48.7158984375,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\ExtractData From CSV to Staging\InValidUserID"
          TopLeft="265.833318808841,657.266663587027" />
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Data Conversion Output1]"
          TopLeft="337.433319082029,557.533331314392">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,99.7333322726353"
              Start="0,0"
              End="0,92.2333322726353">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.2333322726353" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\ExtractData From CSV to Staging\InValidAge"
          TopLeft="484.99997350077,653.399997197589" />
        <EdgeLayout
          Id="Package\ExtractData From CSV to Staging.Paths[Data Conversion Output2]"
          TopLeft="549.866640622749,555.933331459032">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,97.4666657385565"
              Start="0,0"
              End="0,89.9666657385565">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,89.9666657385565" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ExtractData From CSV to Staging\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ExtractData From CSV to Staging\InValidUserID">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ExtractData From CSV to Staging\InValidAge">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>