<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/24/2024 12:19:51 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SINDHUVICTUS"
  DTS:CreatorName="SINDHUVICTUS\s97ra"
  DTS:DTSID="{FCDC6AF8-3041-46EC-94A7-78EB05E73019}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="4105"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="226"
  DTS:VersionGUID="{BFEB88DF-972A-4FA2-B7DD-E93D65FEBE36}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F31DB4DC-748E-4514-8DE2-5B399528E029}"
      DTS:ObjectName="CSV Source">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="9225"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\s97ra\OneDrive\Desktop\Concordia\winter24\IP\Project\SSIS-ETL-TASK\Data\source.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID"
              DTS:DTSID="{30E2A1C4-8D52-423A-8146-4CCAA1EC058B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{C28A1639-2AA6-436E-8771-EB8B175A8D84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{6CBF2015-134F-491D-862C-2DA0E9EAF885}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{6BC214CF-5F1F-4BC6-89FC-07E2190AE613}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{A79DA9C1-F117-4621-AD78-A366851D0ACE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{FEC4DFE7-B809-4167-9208-C0D61B90A0D3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{6BE70434-523A-43CC-9BC7-A722375A4798}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InvalidRows]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{6909F5E8-5372-4E6A-B2BE-B0C137015B13}"
      DTS:ObjectName="InvalidRows">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\s97ra\OneDrive\Desktop\Concordia\winter24\IP\Project\SSIS-ETL-TASK\InvalidRecords\InValidRows.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6C23A16C-974C-474C-AC46-8E79A779797E}"
      DTS:ObjectName="LocalHost">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{6C23A16C-974C-474C-AC46-8E79A779797E}LocalHost;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EBC0FD1A-B0AB-4EFD-96AE-A244E5512FE3}"
      DTS:ObjectName="LocalHost.KoreAssignment_Sindoora_Rao">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=KoreAssignment_Sindoora_Rao;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{EBC0FD1A-B0AB-4EFD-96AE-A244E5512FE3}LocalHost.KoreAssignment_Sindoora_Rao;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.SSIS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{356C32BC-B812-4923-8C40-CC2FD39F2E2D}"
      DTS:ObjectName="LocalHost.SSIS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=SSIS;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package-{356C32BC-B812-4923-8C40-CC2FD39F2E2D}LocalHost.SSIS;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear Old InValid Rows"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:DTSID="{16266B27-F94F-44B0-831E-FCEE73A3F427}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Old InValid Rows"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6909F5E8-5372-4E6A-B2BE-B0C137015B13}"
          SQLTask:SqlStatementSource="DROP TABLE  `InValidAge`&#xA;go&#xA;CREATE TABLE `InValidAge` (&#xA;    `UserID` VARCHAR(50),&#xA;    `FullName` VARCHAR(50),&#xA;    `Age` VARCHAR(50),&#xA;    `Email` VARCHAR(50),&#xA;    `RegistrationDate` VARCHAR(50),&#xA;    `LastLoginDate` VARCHAR(50),&#xA;    `PurchaseTotal` VARCHAR(50)&#xA;)&#xA;go&#xA;DROP TABLE  `InValidUserID`&#xA;go&#xA;CREATE TABLE `InValidUserID` (&#xA;    `UserID` VARCHAR(50),&#xA;    `FullName` VARCHAR(50),&#xA;    `Age` VARCHAR(50),&#xA;    `Email` VARCHAR(50),&#xA;    `RegistrationDate` VARCHAR(50),&#xA;    `LastLoginDate` VARCHAR(50),&#xA;    `PurchaseTotal` VARCHAR(50)&#xA;)&#xA;go&#xA;DROP TABLE  `InValidEmail`&#xA;go&#xA;CREATE TABLE `InValidEmail` (&#xA;    `UserID` VARCHAR(50),&#xA;    `FullName` VARCHAR(50),&#xA;    `Age` VARCHAR(50),&#xA;    `Email` VARCHAR(50),&#xA;    `RegistrationDate` VARCHAR(50),&#xA;    `LastLoginDate` VARCHAR(50),&#xA;    `PurchaseTotal` VARCHAR(50)&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clear Old Staged Records"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{91695ADA-908F-42F6-B79F-B199FDB76602}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear Old Staged Records"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EBC0FD1A-B0AB-4EFD-96AE-A244E5512FE3}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="TRUNCATE TABLE stg.Users;"
          SQLTask:TypeConversionMode="None" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extract And Transform Data From CSV to Staging"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{892DD12C-6674-4834-A70D-8316263D6EE8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extract And Transform Data From CSV to Staging"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[IsUserIDNumeric]"
                      cachedDataType="i4"
                      cachedName="IsUserIDNumeric"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[IsAgeNumeric]"
                      cachedDataType="i4"
                      cachedName="IsAgeNumeric"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input].Columns[IsEmailValid]"
                      cachedDataType="bool"
                      cachedName="IsEmailValid"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsEmailValid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Valid]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="Valid"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]} == 1 &amp;&amp; (DT_I4)#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]} &gt;= 0 &amp;&amp; #{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]} == 1 &amp;&amp; #{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsEmailValid]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsAgeNumeric == 1 &amp;&amp; (DT_I4)Age &gt;= 0 &amp;&amp; IsUserIDNumeric == 1 &amp;&amp; IsEmailValid ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[InValidUserID]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="InValidUserID"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[LEN]([TRIM](#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]})) == 0 || #{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]} == 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">LEN(TRIM(UserID)) == 0 || IsUserIDNumeric == 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[InValidAge]"
                  description="Output 3 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="InValidAge"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(IsAgeNumeric)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">2</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[InValidEmail]"
                  description="Output 4 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="IgnoreFailure"
                  exclusionGroup="1"
                  name="InValidEmail"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="IgnoreFailure">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsEmailValid]} ==  FALSE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsEmailValid ==  FALSE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">3</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input].Columns[CleanLastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanLastLoginDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input].Columns[CleanLastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanLastLoginDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      name="Copy of UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      name="Copy of Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      name="Copy of Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      name="Copy of PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      name="Copy of CleanRegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]"
                      name="Copy of CleanLastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 2"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input].Columns[CleanLastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanLastLoginDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      name="Copy of UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      name="Copy of Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      name="Copy of Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      name="Copy of PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      name="Copy of CleanRegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]"
                      name="Copy of CleanLastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion 3"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input].Columns[CleanLastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanLastLoginDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of UserID]"
                      name="Copy of UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of Age]"
                      name="Copy of Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      name="Copy of Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]"
                      name="Copy of PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]"
                      name="Copy of CleanRegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]"
                      name="Copy of CleanLastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      truncationRowDisposition="IgnoreFailure"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LEN]([TRIM](#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]})) == 0 ? "0.0" : #{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LEN(TRIM(PurchaseTotal)) == 0 ? "0.0" : PurchaseTotal</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]"
                      name="IsUserIDNumeric"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]} == (DT_I4)#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]} ? 1 : 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)UserID == (DT_I4)UserID ? 1 : 0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="IgnoreFailure"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]"
                      name="IsAgeNumeric"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I4)#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]} == (DT_I4)#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]} ? 1 : 0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I4)Age == (DT_I4)Age ? 1 : 0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="9225"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV Source]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV Source]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\InValidAge"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="InValidAge"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">InValidAge</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[InvalidRows]"
                  connectionManagerRefId="Package.ConnectionManagers[InvalidRows]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of UserID"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Age"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of Email]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Email"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of PurchaseTotal"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of CleanLastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanLastLoginDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].Columns[Copy of CleanRegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanRegistrationDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="InValidEmail"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">InValidEmail</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[InvalidRows]"
                  connectionManagerRefId="Package.ConnectionManagers[InvalidRows]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of UserID"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Age"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of Email]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Email"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of PurchaseTotal"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of CleanRegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanRegistrationDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].Columns[Copy of CleanLastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanLastLoginDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="InValidUserID"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">InValidUserID</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[InvalidRows]"
                  connectionManagerRefId="Package.ConnectionManagers[InvalidRows]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of UserID]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of UserID"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of Email]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Email"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of CleanRegistrationDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanRegistrationDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanRegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of PurchaseTotal]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of PurchaseTotal"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of Age]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Age"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].Columns[Copy of CleanLastLoginDate]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of CleanLastLoginDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output].Columns[Copy of CleanLastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[UserID]"
                      dataType="wstr"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Age]"
                      dataType="wstr"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="wstr"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="wstr"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="wstr"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output].Columns[RegistrationDate]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Remove duplicate UserID"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[IsUserIDNumeric]"
                      cachedDataType="i4"
                      cachedName="IsUserIDNumeric"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[CleanRegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanRegistrationDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[IsAgeNumeric]"
                      cachedDataType="i4"
                      cachedName="IsAgeNumeric"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[IsEmailValid]"
                      cachedDataType="bool"
                      cachedName="IsEmailValid"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsEmailValid]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[CleanLastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="CleanLastLoginDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanLastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input].Columns[IsDateOld]"
                      cachedDataType="bool"
                      cachedName="IsDateOld"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsDateOld]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[UserID]"
                      name="UserID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[FullName]"
                      name="FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Age]"
                      name="Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[Email]"
                      name="Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsUserIDNumeric]"
                      name="IsUserIDNumeric">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsUserIDNumeric]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanRegistrationDate]"
                      name="CleanRegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]"
                      dataType="i4"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsAgeNumeric]"
                      name="IsAgeNumeric">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output].Columns[IsAgeNumeric]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsEmailValid]"
                      dataType="bool"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsEmailValid]"
                      name="IsEmailValid">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsEmailValid]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[CleanLastLoginDate]"
                      name="CleanLastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanLastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsDateOld]"
                      dataType="bool"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output].Columns[IsDateOld]"
                      name="IsDateOld">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsDateOld]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Extract And Transform Data From CSV to Staging\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        // Define the cutoff date as January 1, 2000
        DateTime cutoffDate = new DateTime(2000, 1, 1);
        DateTime currentDate = DateTime.Now;

        // Method to safely parse dates and adjust invalid dates
        DateTime SafeParseDate(string dateStr)
        {
            DateTime parsedDate;
            if (DateTime.TryParse(dateStr, out parsedDate))
            {
                // If the date is valid, return it
                return parsedDate;
            }
            else
            {
                // Handle cases like 2022-02-30 by finding the next valid date
                string[] formats = { "dd/MM/yyyy", "MM/dd/yyyy", "yyyy-MM-dd", "dd-MM-yyyy", "M/d/yyyy", "d/M/yyyy" };
                foreach (var format in formats)
                {
                    if (DateTime.TryParseExact(dateStr, format, null, System.Globalization.DateTimeStyles.None, out parsedDate))
                    {
                        return parsedDate;
                    }
                }

                // If all parsing attempts fail, find the next valid date
                string[] parts = dateStr.Split(new char[] { '/', '-', ' ' }, StringSplitOptions.RemoveEmptyEntries);
                if (parts.Length >= 3)
                {
                    int year = int.Parse(parts[0]);
                    int month = int.Parse(parts[1]);
                    int day = int.Parse(parts[2]);

                    while (!DateTime.TryParse($"{year}-{month}-{day}", out parsedDate))
                    {
                        if (day > DateTime.DaysInMonth(year, month))
                        {
                            day = 1;
                            month++;
                            if (month > 12)
                            {
                                month = 1;
                                year++;
                            }
                        }
                        else
                        {
                            day++;
                        }
                    }
                    return parsedDate;
                }
            }

            // Return the current date if parsing fails completely
            return currentDate;
        }

        // Check and clean RegistrationDate
        if (Row.RegistrationDate_IsNull || string.IsNullOrWhiteSpace(Row.RegistrationDate))
        {
            Row.CleanRegistrationDate_IsNull = true;
            Row.IsDateOld = false;
        }
        else
        {
            string dateStr = Row.RegistrationDate.Trim();
            DateTime parsedDate = SafeParseDate(dateStr);

            Row.CleanRegistrationDate = parsedDate;
            Row.IsDateOld = parsedDate < cutoffDate;
        }

        // Check and clean LastLoginDate
        if (Row.LastLoginDate_IsNull || string.IsNullOrWhiteSpace(Row.LastLoginDate))
        {
            Row.CleanLastLoginDate = currentDate;
        }
        else
        {
            string dateStr = Row.LastLoginDate.Trim();
            DateTime parsedDate = SafeParseDate(dateStr);

            // If LastLoginDate is a future date, correct it to currentDate
            Row.CleanLastLoginDate = parsedDate > currentDate ? currentDate : parsedDate;
        }

        // Check and validate Email
        if (Row.Email_IsNull || string.IsNullOrWhiteSpace(Row.Email))
        {
            Row.IsEmailValid = false;
        }
        else
        {
            string email = Row.Email.Trim();
            Row.IsEmailValid = IsValidEmail(email);
        }
    }
    // Method to validate email format using regular expression
    private bool IsValidEmail(string email)
    {
        try
        {
            var addr = new System.Net.Mail.MailAddress(email);
            return addr.Address == email;
        }
        catch
        {
            return false;
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RegistrationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool RegistrationDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Email
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Email_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String LastLoginDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool LastLoginDate_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public DateTime CleanRegistrationDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool CleanRegistrationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsEmailValid
    {
        set
        {
            this[4] = value;
        }
    }
    public bool IsEmailValid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CleanLastLoginDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool CleanLastLoginDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsDateOld
    {
        set
        {
            this[6] = value;
        }
    }
    public bool IsDateOld_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Settings.get_Default():SC_352229efcdd54405872c1725bdd177aa.Properties.Sett" +
    "ings")]

namespace SC_352229efcdd54405872c1725bdd177aa.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_352229efcdd54405872c1725bdd177aa.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{325A1877-9373-46DD-8836-0D013C228C02}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_352229efcdd54405872c1725bdd177aa</RootNamespace>
    <AssemblyName>SC_352229efcdd54405872c1725bdd177aa</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_352229efcdd54405872c1725bdd177aa</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_352229efcdd54405872c1725bdd177aa</msb:DisplayName>
    <msb:ProjectId>{377819C3-DC34-4409-95C0-D116EC6F369A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_352229efcdd54405872c1725bdd177aa.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_352229efcdd54405872c1725bdd177aa")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_352229efcdd54405872c1725bdd177aa")]
[assembly: AssemblyCopyright("Copyright @ HP 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_352229efcdd54405872c1725bdd177aa.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_352229efcdd54405872c1725bdd177aa.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_352229efcdd54405872c1725bdd177aa.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_352229efcdd54405872c1725bdd177aa.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKqJomYAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAGjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMg6AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAKBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD8
OgAAAAAAAEgAAAACAAUAlCQAAHwVAAABAAAAAAAAABA6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQA8gAAAAEAABESASDQBwAA
FxcoEgAAChIAKBMAAAp9CQAABANvCQAABi0NA28IAAAGKBQAAAosEAMXbw8AAAYDFm8UAAAGKycD
bwgAAAZvFQAAChIAKAYAAAYMAwhvDgAABgMIBygWAAAKbxQAAAYDbw0AAAYtDQNvDAAABigUAAAK
LA4DBnsJAAAEbxIAAAYrMANvDAAABm8VAAAKEgAoBgAABg0DCQZ7CQAABCgXAAAKLQMJKwYGewkA
AARvEgAABgNvCwAABi0NA28KAAAGKBQAAAosCAMWbxAAAAYqA28KAAAGbxUAAAoTBAMCEQQoBAAA
Bm8QAAAGKgAAGzACABsAAAACAAARA3MYAAAKbxkAAAoDKBoAAAoK3gUmFgreAAYqAAEQAAAAAAAA
FBQABQ8AAAEeAigYAAAGKhMwBQADAQAAAwAAEQISACgbAAAKLAIGKhyNHAAAASUWcgEAAHCiJRdy
FwAAcKIlGHItAABwoiUZckMAAHCiJRpyWQAAcKIlG3JrAABwogwWDSsZCAmaEwQCEQQUFhIAKBwA
AAosAgYqCRdYDQkIjmky4QIZjSAAAAEl0AgAAAQoHQAAChdvHgAACgsHjmkZMncHFpooHwAAChMF
BxeaKB8AAAoTBgcYmigfAAAKEwcrLREHEQURBiggAAAKMRoXEwcRBhdYEwYRBh8MMREXEwYRBRdY
EwUrBhEHF1gTB3J9AABwEQWMJQAAAREGjCUAAAERB4wlAAABKCEAAAoSACgbAAAKLKsGKgN7CQAA
BCoqAgMEBSgiAAAKKlICeyMAAAoCeyQAAAoWlG8lAAAKKiICFigmAAAKKlICeyMAAAoCeyQAAAoX
lG8lAAAKKiICFygmAAAKKlICeyMAAAoCeyQAAAoYlG8lAAAKKiICGCgmAAAKKjoCGQOMDgAAASgn
AAAKKloDLAgCGSgoAAAKKnKVAABwcykAAAp6OgIaA4wnAAABKCcAAAoqWgMsCAIaKCgAAAoqcpUA
AHBzKQAACno6AhsDjA4AAAEoJwAACipaAywIAhsoKAAACipylQAAcHMpAAAKejoCHAOMJwAAASgn
AAAKKloDLAgCHCgoAAAKKnKVAABwcykAAAp6HgIoKgAACioeAigrAAAKKn4CKCwAAAoCAnMcAAAG
fQEAAAQCAnMdAAAGfQIAAAQqkgRyMgEAcBpvLQAACiwVAgUCAyguAAAKDgRzBwAABm8aAAAGKkor
BwIDbxsAAAYDbxYAAAYt8SoGKjoCKC8AAAoCA30DAAAEKjoCKC8AAAoCA30EAAAEKh4CKC8AAAoq
rn4FAAAELR5yQgEAcNAHAAACKDAAAApvMQAACnMyAAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAA
BCoafgcAAAQqHgIoMwAACioucyMAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5
AAAAAAUAbAAAANAHAAAjfgAAPAgAADAJAAAjU3RyaW5ncwAAAABsEQAAtAEAACNVUwAgEwAAEAAA
ACNHVUlEAAAAMBMAAEwCAAAjQmxvYgAAAAAAAAACAAABV5WiIQkDAAAA+gEzABYAAAEAAAArAAAA
CwAAAAkAAAAkAAAAFwAAADMAAAATAAAAAQAAAAMAAAADAAAAEQAAABIAAAABAAAAAQAAAAQAAAAB
AAAAAgAAAAAAqgQBAAAAAAAGAGgD4AYGAPwD4AYGALQCzQYPAFQHAAAGAOECBQYGAEsDBQYGACwD
BQYGAOMDBQYGAIgDBQYGAKEDBQYGAPgCBQYGABMDNwQKALwDjwEGAIYBlQUGADsIlQUGAHwC4AYG
ALABlQUKAJcGjwEOAIgGjwEKAE4GjwEKAH4IjwEGAJcCzQYGAKgGAAcGAEIG8AUSAGcCZwQSAMgC
ZwQSAOIB2wUGAFQElQUSABoIfQQGAGsGlQUGAJwH8AUGAGYGlQUGAP8H4AYGABEJlQUGAEUBlQUG
AOwHlQUGAEMAlQUGABcGlQUGAK0FlQUGADEGlQUGALUBlQUGAFgBlQUGABsJBQYAAAAAZQAAAAAA
AQABAAEAEADQBQAAEAABAAEAAQAQAHsGAABJAAEABwABABAAYAgAAFUAAQAYAAEAEADgBwAAPQAD
ABwAAQAQAJIHAAA9AAQAHQAAABAABwdjBz0ABQAeAAABEADQB2MHbQAHACIAAAEAAG4AAAA9AAgA
JQADARAAAQAAAEUACQAlABUBAABJAAAARQAKACUABgDgB/UABgCSB/kAAQBuCP0AAQBuCP0AEQCh
BQEBEQDSAQUBEQA1AQkBMwGNAA0BBgBbAhEBUCAAAAAAxgAaBAYAAQBYIAAAAADGACUEBgABAGAg
AAAAAMYA6AgVAQEAYCEAAAAAgQCXBBsBAgCYIQAAAACGGLgGBgADAKAhAAAAAJMAFgAgAQMAryIA
AAAAhhi4BpgABAC6IgAAAACGCCwCOAAHAM8iAAAAAIYINgW6AAcA2CIAAAAAhgiNBDgABwDtIgAA
AACGCHMFugAHAPYiAAAAAIYIAwI4AAcACyMAAAAAhgj/BLoABwAUIwAAAACGCEECKQEHACMjAAAA
AIYIUgUvAQgAOiMAAAAAhggDAS8BCQBJIwAAAACGCNIELwEKAGAjAAAAAIYIFQIpAQsAbyMAAAAA
hggYBS8BDACGIwAAAACGCBQBLwENAJUjAAAAAIYI6gQvAQ4ArCMAAAAAhgD/CLoADwC0IwAAAACG
AEIIugAPALwjAAAAAIYYuAYGAA8A3CMAAAAAxgDTCDQBDwABJAAAAADGAcwIFQETABQkAAAAAMYB
6AgVARQAFiQAAAAAhhi4Bj4BFQAlJAAAAACGGLgGPgEWADQkAAAAAIMYuAYGABcAPCQAAAAAkwik
BkQBFwBoJAAAAACTCLoBSQEXAG8kAAAAAJMIxgFOARcAdyQAAAAAlghUCFQBGAB+JAAAAACGGLgG
BgAYAIYkAAAAAJEYvgZZARgAAAABAAMJAAABAKQEAAABAMUGAAABAJ0GAAACAKsHAAADAFwGAAAB
ADEEAAABADEEAAABADEEAAABADEEAAABADEEAAABADEEAAABADEEAAABADEEAAABAM4AAAACAHwB
AAADAJ0GAAAEAFwGAAABAJ0GAAABAAMJAAABAIQIAAABAIQIAAABADEECQC4BgEAEQC4BgYAGQC4
BgoAKQC4BhAAMQC4BhAAOQC4BhAAQQC4BhAASQC4BhAAUQC4BhAAWQC4BhAAYQC4BhAAaQC4BgYA
gQC4BgYAsQC4BgYA0QC4BhUAqQAaBAYAqQAlBAYAcQC4BicAcQDgCC4A4QAiATMA4QCcBTgAcQDE
BTwAcQC1BTwA6QC4BhAA6QAOCDgA4QAkCUgAcQD6AVwAcQAtCGQACQEHCXEA4QBOCHsAKQH9AYUA
cQBbBIoA4QAmCJAAkQC4BpgAkQCdBqIAkQCrB6YAmQBRBKoAkQB9Ba8AkQCMBbQAkQCEBQEAMQG4
BhAAkQD/CLoAkQBCCLoAqQC4BgYA4QDZB74AqQC/B8YAeQC4BgYASQFqAcwASQEXCdUAuQC4BtsA
2QC4BgYALgALAHkBLgATAIIBLgAbAKEBLgAjAKoBLgArANMBLgAzANMBLgA7ANkBLgBDAKoBLgBL
AOEBLgBTANMBLgBbAPoBQwBjAEQCwABrAEQC4QBrAEQC4wBzAEQCIwFrAEQCQwFrAEQC6QF7AKEB
CQJ7AKEBAQAGAAAACwAbAEQATgADAAEABwAPAAgAEQAAAEoCXQEAAFsFYQEAAJ4EXQEAAHcFYQEA
AB4CXQEAACEFYQEAAEUCZQEAAFYFYQEAAAcBYQEAANYEYQEAABkCZQEAABwFYQEAABgBYQEAAO4E
YQEAAKgGagEAANoBbwEAAFgIdAECAAgAAwACAAkABQACAAoABwACAAsACQACAAwACwACAA0ADQAB
AA4ADwABAA8AEQABABAAEwABABEAFQABABIAFwABABMAGQABABQAGwABABUAHQACAB8AHwACACAA
IQABACEAIQACACIAIwAgOwAACAAEgAAAAQAAAAAAAAAAAAAAAADWAAAABAAAAAAAAAAAAAAA4wD6
AAAAAAAQAAAAAAAAAAAAAADsAI4IAAAAABAAAAAAAAAAAAAAAOwAqwgAAAAABAAAAAAAAAAAAAAA
4wCVBQAAAAAAAAAAAQAAABEHAAAKAAIACwAJAAAAADw+Y19fRGlzcGxheUNsYXNzMl8wADxJbnB1
dDBfUHJvY2Vzc0lucHV0Um93PmdfX1NhZmVQYXJzZURhdGV8Ml8wAEludDMyAF9fU3RhdGljQXJy
YXlJbml0VHlwZVNpemU9NgA8TW9kdWxlPgA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz4A
RTBGN0UzRDlCNkU0OUE0OTU1RDU2RkI0NjFFMDQ2M0Q3RTM0NzBGRTdCMDQ2QUEwQTM5MjJGQ0Iw
NDAwQkI0RABJbnB1dElEAFNDXzM1MjIyOWVmY2RkNTQ0MDU4NzJjMTcyNWJkZDE3N2FhAG1zY29y
bGliAHNldF9Jc0VtYWlsVmFsaWQAc2V0X0lzRGF0ZU9sZABJc051bGxPcldoaXRlU3BhY2UAZGVm
YXVsdEluc3RhbmNlAFJ1bnRpbWVGaWVsZEhhbmRsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBJbnB1dE5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAVmFsdWVUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBUcnlQYXJzZQBnZXRfTGFzdExvZ2luRGF0ZQBzZXRfQ2xl
YW5MYXN0TG9naW5EYXRlAGdldF9SZWdpc3RyYXRpb25EYXRlAHNldF9DbGVhblJlZ2lzdHJhdGlv
bkRhdGUAY3VycmVudERhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRB
dHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRl
AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5
VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlv
blJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNv
cHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAEdldFN0
cmluZwBEYXlzSW5Nb250aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAGdl
dF9FbWFpbABJc1ZhbGlkRW1haWwAZW1haWwAU0NfMzUyMjI5ZWZjZGQ1NDQwNTg3MmMxNzI1YmRk
MTc3YWEuZGxsAHNldF9Jc0VtYWlsVmFsaWRfSXNOdWxsAHNldF9Jc0RhdGVPbGRfSXNOdWxsAGdl
dF9MYXN0TG9naW5EYXRlX0lzTnVsbABzZXRfQ2xlYW5MYXN0TG9naW5EYXRlX0lzTnVsbABnZXRf
UmVnaXN0cmF0aW9uRGF0ZV9Jc051bGwAc2V0X0NsZWFuUmVnaXN0cmF0aW9uRGF0ZV9Jc051bGwA
Z2V0X0VtYWlsX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQBUcmltAHJlc291cmNlTWFu
AEJvb2xlYW4Ab3BfR3JlYXRlclRoYW4Ab3BfTGVzc1RoYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlk
T3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFt
ZU1hcABPdXRwdXRNYXAAQ2hhcgBJRm9ybWF0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5l
QnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBkYXRl
U3RyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5
c3RlbS5SZXNvdXJjZXMAU0NfMzUyMjI5ZWZjZGQ1NDQwNTg3MmMxNzI1YmRkMTc3YWEuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzM1MjIyOWVmY2RkNTQ0
MDU4NzJjMTcyNWJkZDE3N2FhLlByb3BlcnRpZXMAVmFyaWFibGVzAERhdGVUaW1lU3R5bGVzAEJ1
ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVj
dGlvbnMAU3RyaW5nU3BsaXRPcHRpb25zAFJ1bnRpbWVIZWxwZXJzAGdldF9BZGRyZXNzAE1haWxB
ZGRyZXNzAEZvcm1hdABUcnlQYXJzZUV4YWN0AE9iamVjdABFbmRPZlJvd3NldABTcGxpdABnZXRf
RGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABJbnB1dDBfUHJvY2Vzc0lucHV0AGdldF9Ob3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0
Um93AEluaXRpYWxpemVBcnJheQBnZXRfQXNzZW1ibHkAb3BfRXF1YWxpdHkAABVkAGQALwBNAE0A
LwB5AHkAeQB5AAAVTQBNAC8AZABkAC8AeQB5AHkAeQAAFXkAeQB5AHkALQBNAE0ALQBkAGQAARVk
AGQALQBNAE0ALQB5AHkAeQB5AAERTQAvAGQALwB5AHkAeQB5AAARZAAvAE0ALwB5AHkAeQB5AAAX
ewAwAH0ALQB7ADEAfQAtAHsAMgB9AAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAA
YwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBn
AG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQA
ZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAzADUAMgAyADIAOQBlAGYAYwBkAGQANQA0
ADQAMAA1ADgANwAyAGMAMQA3ADIANQBiAGQAZAAxADcANwBhAGEALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAOcstxrCmihEkxRZga6eT7AABCABAQgDIAABBSABARER
BCABAQ4FIAEBEWULBwURKBE5ETkROQ4GIAMBCAgIBAAAETkEAAECDgMgAA4HAAICETkROQMHAQIF
AAICDg4NBwgROR0OHQ4IDggICAcAAgIOEBE5DAAFAg4OEnkRfRAROQkAAgESgIkRgI0JIAIdDh0D
EYCRBAABCA4FAAIICAgHAAQODhwcHAkgAwESTR0IElEDBhJNAwYdCAQgAQ4IBCABAggFIAIBCBwD
IAACByACAg4RgKEFIAEdCAgIAAESgKURgKkFIAASgK0HIAIBDhKArQi3elxWGTTgiQiJhF3NgIDM
kQMGEhQDBhIYAwYSVQMGEl0DBhJhAwYSIAMGESwDBhE5BSABARIMBCABAg4IAAIROQ4QESgFIAEB
ETkEIAEBAgkgBAEIDhJNElEFIAEBElUEAAASXQQAABJhBQABARJhBAAAEiADAAABAygADgMoAAIE
KAAROQQIABJdBAgAEmEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU0NfMzUyMjI5ZWZjZGQ1NDQwNTg3MmMxNzI1YmRkMTc3YWEAAAUBAAAA
AAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAA8DoAAAAAAAAAAAAACjsAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPw6
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEC8ALQAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAPQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwAzADUAMgAyADIAOQBlAGYAYwBkAGQANQA0ADQAMAA1ADgANwAyAGMAMQA3ADIANQBi
AGQAZAAxADcANwBhAGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADMANQAyADIAMgA5
AGUAZgBjAGQAZAA1ADQANAAwADUAOAA3ADIAYwAxADcAMgA1AGIAZABkADEANwA3AGEAYQAuAGQA
bABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAASABQACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
ADMANQAyADIAMgA5AGUAZgBjAGQAZAA1ADQANAAwADUAOAA3ADIAYwAxADcAMgA1AGIAZABkADEA
NwA3AGEAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAz
ADUAMgAyADIAOQBlAGYAYwBkAGQANQA0ADQAMAA1ADgANwAyAGMAMQA3ADIANQBiAGQAZAAxADcA
NwBhAGEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAcOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_352229efcdd54405872c1725bdd177aa</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">BD</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Inputs[Input 0].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Inputs[Input 0].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Inputs[Input 0].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output].Columns[LastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Extract And Transform Data From CSV to Staging\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanRegistrationDate]"
                      name="CleanRegistrationDate" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsEmailValid]"
                      dataType="bool"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsEmailValid]"
                      name="IsEmailValid" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanLastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[CleanLastLoginDate]"
                      name="CleanLastLoginDate" />
                    <outputColumn
                      refId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsDateOld]"
                      dataType="bool"
                      lineageId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0].Columns[IsDateOld]"
                      name="IsDateOld" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output]"
              endId="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output1]"
              endId="Package\Extract And Transform Data From CSV to Staging\InValidUserID.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output2]"
              endId="Package\Extract And Transform Data From CSV to Staging\InValidAge.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output3]"
              endId="Package\Extract And Transform Data From CSV to Staging\InValidEmail.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Derived Column Output]"
              endId="Package\Extract And Transform Data From CSV to Staging\Script Component.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[InValidAge]"
              endId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2.Inputs[Data Conversion Input]"
              name="InValidAge"
              startId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[InValidAge]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[InValidEmail]"
              endId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3.Inputs[Data Conversion Input]"
              name="InValidEmail"
              startId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[InValidEmail]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[InValidUserID]"
              endId="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1.Inputs[Data Conversion Input]"
              name="InValidUserID"
              startId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[InValidUserID]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Script Output]"
              endId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Inputs[Sort Input]"
              name="Script Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Sort Output]"
              endId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Inputs[Conditional Split Input]"
              name="Sort Output"
              startId="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID.Outputs[Sort Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[Source Data]"
              endId="Package\Extract And Transform Data From CSV to Staging\Derived Column.Inputs[Derived Column Input]"
              name="Source Data"
              startId="Package\Extract And Transform Data From CSV to Staging\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Extract And Transform Data From CSV to Staging.Paths[ValidAge]"
              endId="Package\Extract And Transform Data From CSV to Staging\Data Conversion.Inputs[Data Conversion Input]"
              name="ValidAge"
              startId="Package\Extract And Transform Data From CSV to Staging\Conditional Split.Outputs[Valid]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load Data from stage table to target table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{17B12C58-B672-40CB-A84F-44FE801522D2}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load Data from stage table to target table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load Data from stage table to target table\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Data from stage table to target table\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Conditional Split.Inputs[Conditional Split Input].Columns[IsRecordUpdated]"
                      cachedDataType="bool"
                      cachedName="IsRecordUpdated"
                      lineageId="Package\Load Data from stage table to target table\Script Component.Outputs[Output 0].Columns[IsRecordUpdated]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\Conditional Split.Outputs[UpdatedRecord]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="UpdatedRecord"
                  synchronousInputId="Package\Load Data from stage table to target table\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Load Data from stage table to target table\Script Component.Outputs[Output 0].Columns[IsRecordUpdated]} ==  TRUE </property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">IsRecordUpdated ==  TRUE </property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data from stage table to target table\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Load Data from stage table to target table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Data Conversion.Inputs[Data Conversion Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="IgnoreFailure"
                      length="50"
                      lineageId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data from stage table to target table\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT UserID, CONVERT("VARCHAR"(50), PurchaseTotal) AS PurchaseTotalString, FullName, Age, Email, RegistrationDate, LastLoginDate, RecordLastUpdated
FROM     prod.Users</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT UserID, CONVERT("VARCHAR"(50), PurchaseTotal) AS PurchaseTotalString, FullName, Age, Email, RegistrationDate, LastLoginDate, RecordLastUpdated
FROM     prod.Users) [refTable]
where [refTable].[UserID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PurchaseTotalString" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="FullName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Age" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Email" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegistrationDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastLoginDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RecordLastUpdated" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Data from stage table to target table\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Data from stage table to target table\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Inputs[Lookup Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">UserID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">UserID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[PurchaseTotalString]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[PurchaseTotalString]"
                      name="PurchaseTotalString"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">PurchaseTotalString</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="255"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">FullName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Age</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="255"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Email</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">RegistrationDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">LastLoginDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RecordLastUpdated]"
                      name="RecordLastUpdated"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">RecordLastUpdated</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Load Data from stage table to target table\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data from stage table to target table\OLE DB Command"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">INSERT INTO prod.Users (UserID, FullName, Age, Email, RegistrationDate, LastLoginDate, PurchaseTotal, RecordLastUpdated)
VALUES (?, ?, ?, ?, ?, ?, ?, GETDATE())
</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Data from stage table to target table\OLE DB Command.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="wstr"
                      length="255"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="dbDate"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="dbDate"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="r8"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\OLE DB Command.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\OLE DB Command.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data from stage table to target table\OLE DB Command 1"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command 1"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE prod.Users
SET 
    FullName = ?,
    Age = ?,
    Email = ?,
    RegistrationDate = ?,
    LastLoginDate = ?,
    PurchaseTotal = ?,
    RecordLastUpdated = GETDATE()
WHERE UserID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Data from stage table to target table\OLE DB Command 1.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[UserID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="255"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="i4"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="255"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="dbDate"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="dbDate"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="r8"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="i4"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\OLE DB Command 1.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\OLE DB Command 1.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Command 1.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data from stage table to target table\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load Data from stage table to target table\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Sindoora_Rao]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      length="255"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      length="255"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[StgID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[StgID]"
                      name="StgID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                    <externalMetadataColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      name="StgID" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load Data from stage table to target table\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        bool isRecordUpdated = false;
        if (Row.OLEDBSourceUserID == Row.LookupUserID)
        {
            if (!Row.OLEDBSourceFullName.Equals( Row.LookupFullName) ||
                Row.OLEDBSourceAge != Row.LookupAge ||
                !Row.OLEDBSourceEmail.Equals( Row.LookupEmail) ||
                Row.OLEDBSourceRegistrationDate != Row.LookupRegistrationDate||
                Row.OLEDBSourceLastLoginDate != Row.LookupLastLoginDate||
                Row.OLEDBSourcePurchaseTotal != Convert.ToDouble(Row.PurchaseTotalString))
            {
                    isRecordUpdated = true;
            }
        }
        Row.IsRecordUpdated = isRecordUpdated;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ca19f3ba499343cdac2bfd7376a5d629.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{F7395BE1-831D-423B-AB9F-94B2E26A6EF2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_ca19f3ba499343cdac2bfd7376a5d629</RootNamespace>
    <AssemblyName>SC_ca19f3ba499343cdac2bfd7376a5d629</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 StgID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool StgID_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String LookupFullName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool LookupFullName_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Int32 LookupAge
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[2]);
        }
    }
    public bool LookupAge_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String LookupEmail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool LookupEmail_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public DateTime LookupRegistrationDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[4]);
        }
    }
    public bool LookupRegistrationDate_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public DateTime LookupLastLoginDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[5]);
        }
    }
    public bool LookupLastLoginDate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public DateTime RecordLastUpdated
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[6]);
        }
    }
    public bool RecordLastUpdated_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 LookupUserID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[7]);
        }
    }
    public bool LookupUserID_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String PurchaseTotalString
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool PurchaseTotalString_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public Int32 OLEDBSourceUserID
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[9]);
        }
    }
    public bool OLEDBSourceUserID_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String OLEDBSourceFullName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool OLEDBSourceFullName_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public Int32 OLEDBSourceAge
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[11]);
        }
    }
    public bool OLEDBSourceAge_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String OLEDBSourceEmail
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool OLEDBSourceEmail_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public DateTime OLEDBSourceRegistrationDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[13]);
        }
    }
    public bool OLEDBSourceRegistrationDate_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public DateTime OLEDBSourceLastLoginDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[14]);
        }
    }
    public bool OLEDBSourceLastLoginDate_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public Double OLEDBSourcePurchaseTotal
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[15]);
        }
    }
    public bool OLEDBSourcePurchaseTotal_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public Boolean IsRecordUpdated
    {
        set
        {
            this[16] = value;
        }
    }
    public bool IsRecordUpdated_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ca19f3ba499343cdac2bfd7376a5d629.Properties.Settings.get_Default():SC_ca19f3ba499343cdac2bfd7376a5d629.Properties.Sett" +
    "ings")]

namespace SC_ca19f3ba499343cdac2bfd7376a5d629.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_ca19f3ba499343cdac2bfd7376a5d629</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_ca19f3ba499343cdac2bfd7376a5d629</msb:DisplayName>
    <msb:ProjectId>{257A8F16-F4C9-4E35-BBA5-50D16DEFA12B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_ca19f3ba499343cdac2bfd7376a5d629.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_ca19f3ba499343cdac2bfd7376a5d629")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_ca19f3ba499343cdac2bfd7376a5d629")]
[assembly: AssemblyCopyright("Copyright @ HP 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ca19f3ba499343cdac2bfd7376a5d629.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ca19f3ba499343cdac2bfd7376a5d629.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ca19f3ba499343cdac2bfd7376a5d629.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_ca19f3ba499343cdac2bfd7376a5d629.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_ca19f3ba499343cdac2bfd7376a5d629.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ca19f3ba499343cdac2bfd7376a5d629.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAExIo2YAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAA6joA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJg6AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA8BoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADM
OgAAAAAAAEgAAAACAAUABCQAANwVAAABAAAAAAAAAOA5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAIAhwAAAAEAABEWCgNvGAAA
BgNvFAAABjNvA28aAAAGA28IAAAGbxIAAAosWgNvHAAABgNvCgAABjNMA28eAAAGA28MAAAGbxIA
AAosOQNvIAAABgNvDgAABigTAAAKLSYDbyIAAAYDbxAAAAYoEwAACi0TA28kAAAGA28WAAAGKBQA
AAouAhcKAwZvJgAABioeAigqAAAGKioCAwQFKBUAAAoqUgJ7FgAACgJ7FwAAChaUbxgAAAoqIgIW
KBkAAAoqUgJ7FgAACgJ7FwAACheUbxoAAAoqIgIXKBkAAAoqUgJ7FgAACgJ7FwAAChiUbxgAAAoq
IgIYKBkAAAoqUgJ7FgAACgJ7FwAAChmUbxoAAAoqIgIZKBkAAAoqUgJ7FgAACgJ7FwAAChqUbxsA
AAoqIgIaKBkAAAoqUgJ7FgAACgJ7FwAAChuUbxsAAAoqIgIbKBkAAAoqUgJ7FgAACgJ7FwAAChyU
bxwAAAoqIgIcKBkAAAoqUgJ7FgAACgJ7FwAACh2UbxgAAAoqIgIdKBkAAAoqUgJ7FgAACgJ7FwAA
Ch6UbxoAAAoqIgIeKBkAAAoqVgJ7FgAACgJ7FwAACh8JlG8YAAAKKiYCHwkoGQAACipWAnsWAAAK
AnsXAAAKHwqUbxoAAAoqJgIfCigZAAAKKlYCexYAAAoCexcAAAofC5RvGAAACiomAh8LKBkAAAoq
VgJ7FgAACgJ7FwAACh8MlG8aAAAKKiYCHwwoGQAACipWAnsWAAAKAnsXAAAKHw2UbxsAAAoqJgIf
DSgZAAAKKlYCexYAAAoCexcAAAofDpRvGwAACiomAh8OKBkAAAoqVgJ7FgAACgJ7FwAACh8PlG8d
AAAKKiYCHw8oGQAACio+Ah8QA4wdAAABKB4AAAoqXgMsCQIfECgfAAAKKnIBAABwcyAAAAp6HgIo
IQAACioeAigiAAAKKn4CKCMAAAoCAnMuAAAGfQEAAAQCAnMvAAAGfQIAAAQqkgRyngAAcBpvJAAA
CiwVAgUCAyglAAAKDgRzBQAABm8sAAAGKkorBwIDby0AAAYDbygAAAYt8SoGKjoCKCYAAAoCA30D
AAAEKjoCKCYAAAoCA30EAAAEKh4CKCYAAAoqrn4FAAAELR5yrgAAcNAHAAACKCcAAApvKAAACnMp
AAAKgAUAAAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoKgAACiouczUAAAaABwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALQIAAAjfgAAIAkAAJwJAAAjU3Ry
aW5ncwAAAAC8EgAAIAEAACNVUwDcEwAAEAAAACNHVUlEAAAA7BMAAPABAAAjQmxvYgAAAAAAAAAC
AAABVxWiAQkBAAAA+gEzABYAAAEAAAAiAAAACAAAAAcAAAA2AAAADwAAACoAAAAQAAAAAQAAAAMA
AAAlAAAAJgAAAAEAAAAEAAAAAQAAAAAAjgQBAAAAAAAGACsDvQcGAL8DvQcGAHcCqgcPADEIAAAG
AKQC/wYGAA4D/wYGAO8C/wYGAKYD/wYGAEsD/wYGAGQD/wYGALsC/wYGANYC+gMKAH8DTAEKAHwH
TAEOAG0HTAEKAEgHTAEGAEMBrwYKAPcITAEGALoIrwYGAFoCqgcGAI0H3QcGADwH6gYSACoCUwQS
AIsCUwQSAJoB1QYGAD8CvQcGAC8ErwYGACQJrwYGAMIGrwYGABEHrwYGACsHrwYGAG0BrwYGAOcA
rwYGAIQJ/wYAAAAALgAAAAAAAQABAAEAEADKBgAAEAABAAEAAQAQAGAHAAA5AAEABQABABAA2QgA
AEkAAQAqAAEAEACuCAAATQADAC4AAQAQAG8IAABNAAQALwAAABAA5AdACE0ABQAwAAABEACeCEAI
ZQAHADQABgCuCJ0ABgBvCKEAAQDnCKUAAQDnCKUAEQC2BqkAEQCKAa0AEQCjALEAUCAAAAAAxgDd
AwYAAQBYIAAAAADGAOgDBgABAGAgAAAAAMYAYQm1AAEA8yAAAAAAhhidBwYAAgD7IAAAAACGGJ0H
MQACAAYhAAAAAIYINwC7AAUAGyEAAAAAhgi2BGMABQAkIQAAAACGCCMBvwAFADkhAAAAAIYIggVj
AAUAQiEAAAAAhgjGALsABQBXIQAAAACGCE4FYwAFAGAhAAAAAIYIfgS/AAUAdSEAAAAAhgiHBmMA
BQB+IQAAAACGCAcCwwAFAJMhAAAAAIYIBgZjAAUAnCEAAAAAhgjPAcMABQCxIQAAAACGCMAFYwAF
ALohAAAAAIYIjQDDAAUAzyEAAAAAhggXBWMABQDYIQAAAACGCFcAuwAFAO0hAAAAAIYI5ARjAAUA
9iEAAAAAhggUBL8ABQALIgAAAACGCCgGYwAFABQiAAAAAIYIQQC7AAUAKiIAAAAAhgjHBGMABQA0
IgAAAACGCAsBvwAFAEoiAAAAAIYIYwVjAAUAVCIAAAAAhgizALsABQBqIgAAAACGCDQFYwAFAHQi
AAAAAIYIaQS/AAUAiiIAAAAAhghrBmMABQCUIgAAAACGCOcBwwAFAKoiAAAAAIYI3wVjAAUAtCIA
AAAAhgiyAcMABQDKIgAAAACGCJwFYwAFANQiAAAAAIYINgTIAAUA6iIAAAAAhghHBmMABQD0IgAA
AACGCHkAzAAFAAQjAAAAAIYI/ATMAAYAHCMAAAAAhgB4CWMABwAkIwAAAACGAMEIYwAHACwjAAAA
AIYYnQcGAAcATCMAAAAAxgBUCdEABwBxIwAAAADGAU0JtQALAIQjAAAAAMYBYQm1AAwAhiMAAAAA
hhidB9sADQCVIwAAAACGGJ0H2wAOAKQjAAAAAIMYnQcGAA8ArCMAAAAAkwiJB+EADwDYIwAAAACT
CHIB5gAPAN8jAAAAAJMIfgHrAA8A5yMAAAAAlgjNCPEAEADuIwAAAACGGJ0HBgAQAPYjAAAAAJEY
owf2ABAAAAABAHwJAAABAIIHAAACAHkIAAADAFYHAAABAPQDAAABAPQDAAABAGgAAAACADYBAAAD
AIIHAAAEAFYHAAABAIIHAAABAHwJAAABAP0IAAABAP0IAAABAPQDCQCdBwEAEQCdBwYAGQCdBwoA
KQCdBxAAMQCdBxAAOQCdBxAAQQCdBxAASQCdBxAAUQCdBxAAWQCdBxAAYQCdBxAAaQCdBwYAoQCd
BwYAwQCdBxUA0QCdBwYAkQDdAwYAkQDoAwYA2QCnCB8AiQCNCSQA4QDUACwAcQCdBzEAcQCCBzsA
cQB5CD8AeQABAEMAcQCXBkgAeQAsBE0AeQAiAlIAeQBAAVIAeQDdAFgAcQCmBl0AcQCeBgEA8QCd
BxAAcQB4CWMAcQDBCGMAkQCdBwYA2QCnCGcAkQCNCG4AmQCdBwYAAQH5AHQAAQGACX0AqQCdB4MA
yQCdBwYALgALAB4BLgATACcBLgAbAEYBLgAjAE8BLgArAHgBLgAzAHgBLgA7AH4BLgBDAE8BLgBL
AIYBLgBTAHgBLgBbAJ8BQwBjAOkB4QB7AOkB4wBrAOkBaQRzAEYBiQRzAEYBGwADAAEABwAjAAgA
JQAAADsA+gAAALoE/gAAACcBAgEAAIYF/gAAAMoA+gAAAFIF/gAAAIIEAgEAAIsG/gAAAAsCBgEA
AAoG/gAAANMBBgEAAMQF/gAAAJEABgEAABsF/gAAAFsA+gAAAOgE/gAAABgEAgEAACwG/gAAAEUA
+gAAAMsE/gAAAA8BAgEAAGcF/gAAALcA+gAAADgF/gAAAG0EAgEAAG8G/gAAAOsBBgEAAOMF/gAA
ALYBBgEAAKAF/gAAADoECwEAAEsG/gAAAH0A/gAAAAAF/gAAAI0HDwEAAJIBFAEAANEIGQECAAYA
AwACAAcABQACAAgABwACAAkACQACAAoACwACAAsADQACAAwADwACAA0AEQACAA4AEwACAA8AFQAC
ABAAFwACABEAGQACABIAGwACABMAHQACABQAHwACABUAIQACABYAIwACABcAJQACABgAJwACABkA
KQACABoAKwACABsALQACABwALwACAB0AMQACAB4AMwACAB8ANQACACAANwACACEAOQACACIAOwAC
ACMAPQACACQAPwACACUAQQABACYAQwABACcARQACADEARwACADIASQABADMASQACADQASwAEgAAA
AQAAAAAAAAAAAAAAAAAKAAAABAAAAAAAAAAAAAAAiwBwAAAAAAAQAAAAAAAAAAAAAACUAAcJAAAA
ABAAAAAAAAAAAAAAAJQALAkAAAAABAAAAAAAAAAAAAAAiwCvBgAAAAAAAAAAAQAAAO4HAAAAAAAA
AEdldEludDMyAFNDX2NhMTlmM2JhNDk5MzQzY2RhYzJiZmQ3Mzc2YTVkNjI5ADxNb2R1bGU+AGdl
dF9TdGdJRABnZXRfT0xFREJTb3VyY2VVc2VySUQAZ2V0X0xvb2t1cFVzZXJJRABJbnB1dElEAG1z
Y29ybGliAHNldF9Jc1JlY29yZFVwZGF0ZWQAZ2V0X1JlY29yZExhc3RVcGRhdGVkAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfT0xFREJTb3VyY2VBZ2UAZ2V0X0xvb2t1cEFnZQBUb0RvdWJsZQBHZXREb3Vi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X09MRURCU291cmNlRnVs
bE5hbWUAZ2V0X0xvb2t1cEZ1bGxOYW1lAElucHV0TmFtZQBHZXREYXRlVGltZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBnZXRfT0xFREJTb3VyY2VMYXN0TG9n
aW5EYXRlAGdldF9Mb29rdXBMYXN0TG9naW5EYXRlAGdldF9PTEVEQlNvdXJjZVJlZ2lzdHJhdGlv
bkRhdGUAZ2V0X0xvb2t1cFJlZ2lzdHJhdGlvbkRhdGUAR2V0RGF0ZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmli
dXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3Jr
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5S
dW50aW1lLlZlcnNpb25pbmcAZ2V0X1B1cmNoYXNlVG90YWxTdHJpbmcAR2V0U3RyaW5nAGdldF9P
TEVEQlNvdXJjZVB1cmNoYXNlVG90YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAGdldF9PTEVEQlNv
dXJjZUVtYWlsAGdldF9Mb29rdXBFbWFpbABTQ19jYTE5ZjNiYTQ5OTM0M2NkYWMyYmZkNzM3NmE1
ZDYyOS5kbGwAZ2V0X1N0Z0lEX0lzTnVsbABnZXRfT0xFREJTb3VyY2VVc2VySURfSXNOdWxsAGdl
dF9Mb29rdXBVc2VySURfSXNOdWxsAHNldF9Jc1JlY29yZFVwZGF0ZWRfSXNOdWxsAGdldF9SZWNv
cmRMYXN0VXBkYXRlZF9Jc051bGwAZ2V0X09MRURCU291cmNlQWdlX0lzTnVsbABnZXRfTG9va3Vw
QWdlX0lzTnVsbABnZXRfT0xFREJTb3VyY2VGdWxsTmFtZV9Jc051bGwAZ2V0X0xvb2t1cEZ1bGxO
YW1lX0lzTnVsbABnZXRfT0xFREJTb3VyY2VMYXN0TG9naW5EYXRlX0lzTnVsbABnZXRfTG9va3Vw
TGFzdExvZ2luRGF0ZV9Jc051bGwAZ2V0X09MRURCU291cmNlUmVnaXN0cmF0aW9uRGF0ZV9Jc051
bGwAZ2V0X0xvb2t1cFJlZ2lzdHJhdGlvbkRhdGVfSXNOdWxsAGdldF9QdXJjaGFzZVRvdGFsU3Ry
aW5nX0lzTnVsbABnZXRfT0xFREJTb3VyY2VQdXJjaGFzZVRvdGFsX0lzTnVsbABnZXRfT0xFREJT
b3VyY2VFbWFpbF9Jc051bGwAZ2V0X0xvb2t1cEVtYWlsX0lzTnVsbABTZXROdWxsAHNldF9JdGVt
AFN5c3RlbQByZXNvdXJjZU1hbgBCb29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291
cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1l
LkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19jYTE5ZjNiYTQ5OTM0M2NkYWMy
YmZkNzM3NmE1ZDYyOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9k
ZXMAU0NfY2ExOWYzYmE0OTkzNDNjZGFjMmJmZDczNzZhNWQ2MjkuUHJvcGVydGllcwBWYXJpYWJs
ZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBD
b25uZWN0aW9ucwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQ
YXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3Jp
cHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vz
c0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAb3BfSW5l
cXVhbGl0eQAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAg
AGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEA
bAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBu
AHAAdQB0ACAAMAAAcVMAQwBfAGMAYQAxADkAZgAzAGIAYQA0ADkAOQAzADQAMwBjAGQAYQBjADIA
YgBmAGQANwAzADcANgBhADUAZAA2ADIAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAaoTmLds8uEeq6lItigIEVwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQMH
AQIEIAECDgcAAgIRRRFFBAABDQ4JIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBCABDggFIAER
RQgEIAENCAUgAgEIHAMgAAIGIAICDhF9BSABHQgICAABEoCBEYCFBSAAEoCJByACAQ4SgIkIt3pc
Vhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkkDBhJVAwYSWQMGEiAFIAEBEgwDIAAIAyAADgQgABFF
AyAADQQgAQECCSAEAQgOEj0SQQUgAQESSQQAABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAAIAygA
AgMoAA4EKAARRQMoAA0ECAASVQQIABJZBAgAEiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2NhMTlmM2JhNDk5MzQzY2RhYzJiZmQ3Mzc2YTVk
NjI5AAAFAQAAAAAHAQACSFAAABgBABNDb3B5cmlnaHQgQCBIUCAyMDI0AABJAQAaLk5FVEZyYW1l
d29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3Jr
IDQuNwQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAwDoAAAAAAAAAAAAA2joAAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAMw6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAPQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBjAGEAMQA5AGYAMwBiAGEANAA5ADkAMwA0ADMAYwBkAGEAYwAyAGIAZgBkADcAMwA3
ADYAYQA1AGQANgAyADkAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGMAYQAxADkAZgAz
AGIAYQA0ADkAOQAzADQAMwBjAGQAYQBjADIAYgBmAGQANwAzADcANgBhADUAZAA2ADIAOQAuAGQA
bABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAASABQACAAMgAwADIANAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
AGMAYQAxADkAZgAzAGIAYQA0ADkAOQAzADQAMwBjAGQAYQBjADIAYgBmAGQANwAzADcANgBhADUA
ZAA2ADIAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBj
AGEAMQA5AGYAMwBiAGEANAA5ADkAMwA0ADMAYwBkAGEAYwAyAGIAZgBkADcAMwA3ADYAYQA1AGQA
NgAyADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADsOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_ca19f3ba499343cdac2bfd7376a5d629</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F9</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[StgID]"
                      cachedDataType="i4"
                      cachedName="StgID"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[StgID]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[Lookup.FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[FullName]"
                      name="Lookup.FullName" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[Lookup.Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Age]"
                      name="Lookup.Age" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[Lookup.Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[Email]"
                      name="Lookup.Email" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[Lookup.RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RegistrationDate]"
                      name="Lookup.RegistrationDate" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[Lookup.LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[LastLoginDate]"
                      name="Lookup.LastLoginDate" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[RecordLastUpdated]"
                      cachedDataType="dbTimeStamp"
                      cachedName="RecordLastUpdated"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[RecordLastUpdated]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[Lookup.UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[UserID]"
                      name="Lookup.UserID" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[PurchaseTotalString]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotalString"
                      lineageId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output].Columns[PurchaseTotalString]" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[UserID]"
                      name="OLE DB Source.UserID" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[FullName]"
                      name="OLE DB Source.FullName" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Age]"
                      name="OLE DB Source.Age" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[Email]"
                      name="OLE DB Source.Email" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      name="OLE DB Source.RegistrationDate" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      name="OLE DB Source.LastLoginDate" />
                    <inputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0].Columns[OLE DB Source.PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      name="OLE DB Source.PurchaseTotal" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load Data from stage table to target table\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load Data from stage table to target table\Script Component.Outputs[Output 0].Columns[IsRecordUpdated]"
                      dataType="bool"
                      lineageId="Package\Load Data from stage table to target table\Script Component.Outputs[Output 0].Columns[IsRecordUpdated]"
                      name="IsRecordUpdated" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load Data from stage table to target table.Paths[Data Conversion Output]"
              endId="Package\Load Data from stage table to target table\Lookup.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\Load Data from stage table to target table\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Load Data from stage table to target table.Paths[Lookup Match Output]"
              endId="Package\Load Data from stage table to target table\Script Component.Inputs[Input 0]"
              name="Lookup Match Output"
              startId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Load Data from stage table to target table.Paths[Lookup No Match Output]"
              endId="Package\Load Data from stage table to target table\OLE DB Command.Inputs[OLE DB Command Input]"
              name="Lookup No Match Output"
              startId="Package\Load Data from stage table to target table\Lookup.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Load Data from stage table to target table.Paths[OLE DB Source Output]"
              endId="Package\Load Data from stage table to target table\Data Conversion.Inputs[Data Conversion Input]"
              name="OLE DB Source Output"
              startId="Package\Load Data from stage table to target table\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Load Data from stage table to target table.Paths[Output 0]"
              endId="Package\Load Data from stage table to target table\Conditional Split.Inputs[Conditional Split Input]"
              name="Output 0"
              startId="Package\Load Data from stage table to target table\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Load Data from stage table to target table.Paths[UpdatedRecord]"
              endId="Package\Load Data from stage table to target table\OLE DB Command 1.Inputs[OLE DB Command Input]"
              name="UpdatedRecord"
              startId="Package\Load Data from stage table to target table\Conditional Split.Outputs[UpdatedRecord]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{EAF6C1B7-B6A5-4EF7-A164-C76E86776F9A}"
      DTS:From="Package\Clear Old InValid Rows"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Clear Old Staged Records" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{60F097C4-904D-4631-8141-440F6B803A29}"
      DTS:From="Package\Extract And Transform Data From CSV to Staging"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load Data from stage table to target table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{560C6A82-0A33-4B16-9250-A52D6F4373E0}"
      DTS:From="Package\Clear Old Staged Records"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Extract And Transform Data From CSV to Staging" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="185.6,41.6"
          Id="Package\Clear Old InValid Rows"
          TopLeft="167.499990848204,44.1999996926387" />
        <NodeLayout
          Size="199.2,41.6"
          Id="Package\Clear Old Staged Records"
          TopLeft="166.666657560402,145.599998987516" />
        <NodeLayout
          Size="308,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging"
          TopLeft="106.666660838657,227.933331748314" />
        <NodeLayout
          Size="269.6,41.6"
          Id="Package\Load Data from stage table to target table"
          TopLeft="127.499993033707,330.19999770383" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="263.283324204303,85.7999996926387">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.7999992948774"
              Start="0,0"
              End="0,52.2999992948774">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.2999992948774" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="261.483326936182,269.533331748314">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.6666659555167"
              Start="0,0"
              End="0,53.1666659555167">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.1666659555167" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="263.466659199529,187.199998987516">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.7333327607975"
              Start="0,0"
              End="0,33.2333327607975">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.2333327607975" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Extract And Transform Data From CSV to Staging">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Flat File Source"
          TopLeft="242.5,5.49999999999995" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Data Conversion"
          TopLeft="57.6000099713598,560.366665105754" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Script Component"
          TopLeft="235.833320447969,197.666665431195" />
        <NodeLayout
          Size="136.8,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\InValidEmail"
          TopLeft="611.666633246675,637.066663966709" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Data Conversion 2"
          TopLeft="409.999977598589,560.266664472951" />
        <NodeLayout
          Size="171.2,63.2"
          Id="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination"
          TopLeft="43.8333312388928,636.833331947194" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Data Conversion 3"
          TopLeft="604.999966944259,550.266664581431" />
        <NodeLayout
          Size="142.4,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\InValidUserID"
          TopLeft="242.499986750385,642.533330356147" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Derived Column"
          TopLeft="234.166653872365,89.2666660459174" />
        <NodeLayout
          Size="164,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Data Conversion 1"
          TopLeft="227.499987569948,556.666664364471" />
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\InValidAge"
          TopLeft="428.333309930233,643.866663930549" />
        <NodeLayout
          Size="196.8,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Remove duplicate UserID"
          TopLeft="215.833321540721,301.066665919356" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Extract And Transform Data From CSV to Staging\Conditional Split"
          TopLeft="242.499986750385,402.999998788635" />
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[ValidAge]"
          TopLeft="275.619986750385,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-140.019976779025,115.766666317119"
              Start="0,0"
              End="-140.019976779025,108.266666317119">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.8816592833239" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.8816592833239"
                    Point2="0,34.8816592833239"
                    Point3="-4,34.8816592833239" />
                  <mssgle:LineSegment
                    End="-136.019976779025,34.8816592833239" />
                  <mssgle:CubicBezierSegment
                    Point1="-136.019976779025,34.8816592833239"
                    Point2="-140.019976779025,34.8816592833239"
                    Point3="-140.019976779025,38.8816592833239" />
                  <mssgle:LineSegment
                    End="-140.019976779025,108.266666317119" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-81.3611602645125,39.8816592833239,22.70234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Source Data]"
          TopLeft="314.333326936182,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.1666660459175"
              Start="0,0"
              End="0,34.6666660459175">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.6666660459175" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Sort Output]"
          TopLeft="316.766654145553,342.666665919356">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.333332869279"
              Start="0,0"
              End="0,52.833332869279">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.833332869279" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,18.4166664346395,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Script Output]"
          TopLeft="315.433320994345,239.266665431195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.8000004881611"
              Start="0,0"
              End="0,54.3000004881611">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.3000004881611" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,19.1500002440806,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[InValidUserID]"
          TopLeft="307.119987160167,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,112.066665575836"
              Start="0,0"
              End="0,104.566665575836">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,104.566665575836" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.1328125,47.408821069168,62.265625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[InValidEmail]"
          TopLeft="362.979986750385,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="324.019980193874,105.666665792796"
              Start="0,0"
              End="324.019980193874,98.1666657927963">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.8384276842923" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.8384276842923"
                    Point2="0,31.8384276842923"
                    Point3="4,31.8384276842923" />
                  <mssgle:LineSegment
                    End="320.019980193874,31.8384276842923" />
                  <mssgle:CubicBezierSegment
                    Point1="320.019980193874,31.8384276842923"
                    Point2="324.019980193874,31.8384276842923"
                    Point3="324.019980193874,35.8384276842923" />
                  <mssgle:LineSegment
                    End="324.019980193874,98.1666657927963" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="134.341259628187,36.8384276842923,55.3374609375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[InValidAge]"
          TopLeft="333.859986750385,444.599998788635">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158.139990848204,115.666665684316"
              Start="0,0"
              End="158.139990848204,108.166665684316">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.7771380336005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.7771380336005"
                    Point2="0,51.7771380336005"
                    Point3="4,51.7771380336005" />
                  <mssgle:LineSegment
                    End="154.139990848204,51.7771380336005" />
                  <mssgle:CubicBezierSegment
                    Point1="154.139990848204,51.7771380336005"
                    Point2="158.139990848204,51.7771380336005"
                    Point3="158.139990848204,55.7771380336005" />
                  <mssgle:LineSegment
                    End="158.139990848204,108.166665684316" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="54.712046205352,56.7771380336005,48.7158984375,11.6630859375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Derived Column Output]"
          TopLeft="313.599987160167,130.866666045917">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.7999993852775"
              Start="0,0"
              End="0,59.2999993852775">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.2999993852775" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,21.6499996926388,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output3]"
          TopLeft="683.533300095467,591.866664581431">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.1999993852776"
              Start="0,0"
              End="0,37.6999993852776">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.6999993852776" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output2]"
          TopLeft="492.366643764411,601.866664472951">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.9999994575982"
              Start="0,0"
              End="0,34.4999994575982">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.4999994575982" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output1]"
          TopLeft="311.599987160167,598.266664364471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.2666659916765"
              Start="0,0"
              End="0,36.7666659916765">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.7666659916765" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Extract And Transform Data From CSV to Staging.Paths[Data Conversion Output]"
          TopLeft="132.516670605126,601.966665105754">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.8666668414405"
              Start="0,0"
              End="0,27.3666668414405">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3666668414405" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,5.68333342072025,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Extract And Transform Data From CSV to Staging\InValidEmail">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract And Transform Data From CSV to Staging\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract And Transform Data From CSV to Staging\InValidUserID">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Extract And Transform Data From CSV to Staging\InValidAge">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load Data from stage table to target table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,41.6"
          Id="Package\Load Data from stage table to target table\Data Conversion"
          TopLeft="157.999997645617,203.79999769032" />
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\Load Data from stage table to target table\OLE DB Command"
          TopLeft="379.999994337558,483.799993517995" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\Load Data from stage table to target table\Script Component"
          TopLeft="116.999998256564,443.799994114041" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\Load Data from stage table to target table\OLE DB Command 1"
          TopLeft="149.999997764826,667.799990776181" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\Load Data from stage table to target table\Lookup"
          TopLeft="177.499997437,334.299995827675" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\Load Data from stage table to target table\OLE DB Source"
          TopLeft="154.833331026137,26.6666662693024" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Load Data from stage table to target table\Conditional Split"
          TopLeft="8.99999986588955,500.799993264675" />
        <EdgeLayout
          Id="Package\Load Data from stage table to target table.Paths[UpdatedRecord]"
          TopLeft="85.7999998658895,542.399993264675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="152.199997898936,125.399997511506"
              Start="0,0"
              End="152.199997898936,117.899997511506">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.699998755753" />
                  <mssgle:CubicBezierSegment
                    Point1="0,58.699998755753"
                    Point2="0,62.699998755753"
                    Point3="4,62.699998755753" />
                  <mssgle:LineSegment
                    End="148.199997898936,62.699998755753" />
                  <mssgle:CubicBezierSegment
                    Point1="148.199997898936,62.699998755753"
                    Point2="152.199997898936,62.699998755753"
                    Point3="152.199997898936,66.699998755753" />
                  <mssgle:LineSegment
                    End="152.199997898936,117.899997511506" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="41.9380653557182,67.699998755753,68.3238671875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Data from stage table to target table.Paths[Output 0]"
          TopLeft="116.999998256564,464.599994114041">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-31.1999983906746,36.1999991506337"
              Start="0,0"
              End="-31.1999983906746,28.6999991506337">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-27.1999983906746,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.1999983906746,0"
                    Point2="-31.1999983906746,0"
                    Point3="-31.1999983906746,4" />
                  <mssgle:LineSegment
                    End="-31.1999983906746,28.6999991506337" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Data from stage table to target table.Paths[OLE DB Source Output]"
          TopLeft="233.416664335877,68.2666662693024">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,135.533331421018"
              Start="0,0"
              End="0,128.033331421018">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,128.033331421018" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Data from stage table to target table.Paths[Lookup No Match Output]"
          TopLeft="251.366664103667,375.899995827675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="212.233330233892,107.89999769032"
              Start="0,0"
              End="212.233330233892,100.39999769032">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.0654536022004" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.0654536022004"
                    Point2="0,44.0654536022004"
                    Point3="4,44.0654536022004" />
                  <mssgle:LineSegment
                    End="208.233330233892,44.0654536022004" />
                  <mssgle:CubicBezierSegment
                    Point1="208.233330233892,44.0654536022004"
                    Point2="212.233330233892,44.0654536022004"
                    Point3="212.233330233892,48.0654536022004" />
                  <mssgle:LineSegment
                    End="212.233330233892,100.39999769032" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="50.3102783981959,49.0654536022004,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Data from stage table to target table.Paths[Lookup Match Output]"
          TopLeft="233.899997437,375.899995827675">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-36.0999991804356,67.8999982863661"
              Start="0,0"
              End="-36.0999991804356,60.3999982863661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.949999143183" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.949999143183"
                    Point2="0,33.949999143183"
                    Point3="-4,33.949999143183" />
                  <mssgle:LineSegment
                    End="-32.0999991804356,33.949999143183" />
                  <mssgle:CubicBezierSegment
                    Point1="-32.0999991804356,33.949999143183"
                    Point2="-36.0999991804356,33.949999143183"
                    Point3="-36.0999991804356,37.949999143183" />
                  <mssgle:LineSegment
                    End="-36.0999991804356,60.3999982863661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-66.2413863089678,38.949999143183,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Load Data from stage table to target table.Paths[Data Conversion Output]"
          TopLeft="234.949997541308,245.39999769032">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88.8999981373553"
              Start="0,0"
              End="0,81.3999981373553">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,81.3999981373553" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load Data from stage table to target table\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load Data from stage table to target table\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>